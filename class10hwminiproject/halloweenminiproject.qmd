---
title: "Class 10 Lab: Halloween Mini-Project"
author: "Joshua Mac"
format: pdf
date: Feb 5, 2025
prefer-html: true

---
***538 Halloween Candy Data Set!***

**Importing candy data**

First, fetch the data:
```{r}
candy_file <-"https://raw.githubusercontent.com/fivethirtyeight/data/master/candy-power-ranking/candy-data.csv"
candy = read.csv(candy_file, row.names=1)
head(candy)
```
The dataset contains different kinds of candy sorted by many different characteristics such as whether it has chocolate, if it has a fruit flavor, its sugar content, etc.

**Q1. How many different candy types are in this dataset?**

> A1. There are 85 different candy types in the dataset. See the code below.

```{r}
nrow(candy)
```

***Q2. How many fruity candy types are in the dataset?***

> A2. There are 38 fruity candy types in the dataset. See the code below.

```{r}
sum(candy$fruity==1)
```

**What is my favorite candy?**

*Exploring winpercent variable*

```{r}
candy["Twix", ]$winpercent

```
This variable corresponds to the percentage of people who prefer the candy over another randomly chosen candy from the dataset, pretty neat!

**Q3. What is your favorite candy in the dataset and what is its winpercent value?**

> A3. My favorite candy is Hershey's Kisses; its winpercent value is 55.37545. See the code below.

```{r}
candy["Hershey's Kisses", ]$winpercent
```
**Q4/5. What is the winpercent value for "Kit Kat"? for "Tootsie Roll Snack Bars"?**

> A4/5. The winpercent values are 76.7686 and 49.6535, respectively.

```{r}
candy["Kit Kat",]$winpercent
candy["Tootsie Roll Snack Bars", ]$winpercent
```

Let's use skim() from the skimr package to give a quick overview of the dataset.

```{r}
# install.packages("skimr")
library("skimr")
skim(candy)
```
At a glance, the overview includes mean and sd, which saves us having to find them ourselves.

**Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?**

> A6. Yes, winpercent seems to be on a completely different scale to the majority.

**Q7. What do you think a zero and one represent for the candy$chocolate column?**

> A7. The zero and one most likely represent "no" and "yes", respectively, as in binary. This can be understood through the meaning of the chocolate variable and evaluating a candy that is and is not chocolatey against each other. For example, 3 Musketeers has a value of 1 for the chocolate column because it contains chocolate while Air Heads, a fruity taffy candy, has a value of 0.

**Q8. Plot a histogram of winpercent values**

> A8. See below code/histogram

```{r}
library(ggplot2)
ggplot(candy, aes(winpercent))+
  geom_histogram()
```
**Q9. Is the distribution of winperecent values symmetrical>**

> A9. The distribution of winpercent values is not symmetrical, there is a slight skew to the right.This means the mean will be greater than the median as the values at the higher end influence mean more than median changes with an addition of a new point in the same upper range.

```{r}
mean(candy$winpercent)
median(candy$winpercent)
```

**Q10. Is the center of the distribution above or below 50%?**

> A10. The center of the distribution (median) is below 50%, at approximately 47.83. See above actually^

**Q11. On average is chocolate candy higher or lower ranked than fruit candy?**

> A11. On average, chocolate candy (M=60.92153) is ranked higher than fruit candy (M=44.11974).

```{r}
mean(candy$winpercent[as.logical(candy$chocolate)]) > mean(candy$winpercent[as.logical(candy$fruity)])
mean(candy$winpercent[as.logical(candy$chocolate)])
mean(candy$winpercent[as.logical(candy$fruity)])
```

**Q12. Is this difference statistically significant?**

> A12. No, the difference is not statistically significant, as the p-value is > 0.05.

```{r}
t.test(candy$chocolate, candy$fruity)
```
**Overall Candy Rankings**

**Q13 What are the five least liked candy ype in this set?**

> A13. The five least liked are Nik L Nip, Boston Baked Beans, Chiclets, Super Bubble, and Jawbusters

```{r}
library(dplyr)
candy %>%
  arrange(winpercent)%>%
  head(5)
```

**Q14. What are the five top 5 all time favorite candy types out of this set?**

> A14. The top 5 are Snickers, Kit Kat, Twix, Reese's Minatures, and Reese's PBC

```{r}
candy %>%
  arrange(winpercent)%>%
  tail(5)
```
**Q15. Make a first barplot of candy ranking based on winpercent values**

> A15. 

```{r}
library(ggplot2)

ggplot(candy) + 
  aes(winpercent, rownames(candy)) +
  geom_col()
```

**Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?**

> A16.

```{r}
library(ggplot2)

ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col()
```
Let's add color now!

```{r}
my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "pink"

# Here are a few color vectors set up for some of our candy columns.
```

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col(fill=my_cols) 
```
**Q17. What is the worst ranked chocolate candy?**

> A17. From the graph it is the lowest falling chocolate color bar, which is Sixlets.

**Q18. What is the best ranked fruity candy?**

> A18. The best ranked fruity candy is Starburst (top pink bar, taken from graph)!

**Taking a look at pricepercent**

```{r}
# install.packages("ggrepel")
library(ggrepel)

# How about a plot of price vs win
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text_repel(col=my_cols, size=3.3, max.overlaps = 5)
```
**Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?**

> A19. Reese's Miniatures! They sit around a pricepercent of 0.3 meanwhile being at a winpercent of about 83!

**Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?**

> A20. The top 5 most expensive candy types are Nik L Nip tied in pricepercent with Nestle Smarties, Ring pop next, Hershey's Krackel, then Hershey's Milk Chocolate, with Nik L Nip being the least popular with the lowest winpercent (22.44534) amongst the group.

```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )
```

**Exploring the correlation structure**

```{r}
# install.packages("corrplot")
library(corrplot)
```
```{r}
cij <- cor(candy)
corrplot(cij)
```
Woah!

**Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?**

> A22. The fruity and chocolate variables are anti-correlated, having minus values colored red in the plot. Which is a shame because what do you know about the Meiji Choco Gummy's (they might sell at market!)

**Q23. Similarly, what two variables are most positively correlated?**

> A23. The two variables most positively correlated are the variables against itself (e.g. bar x bar, nougat x nougat, and chocolate x chocolate).

**PCA**

```{r}
pca <- prcomp(candy, scale=T)
summary(pca)
```
Now, we plot >:)

```{r}
plot(pca$x[,1:2])
```
Now, some color!
```{r}
plot(pca$x[,1:2], col=my_cols, pch=16)
```
Let's try with ggplot, which prefers df inputs that have sep columns for each aes for the plot.
```{r}
# Make a new data-frame with our PCA results and candy data
my_data <- cbind(candy, pca$x[,1:3])
```
```{r}
p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=my_cols)

p
```
Now we add the text_repel for candy names and other labels.
```{r}
library(ggrepel)

p + geom_text_repel(size=3.3, col=my_cols, max.overlaps = 7)  + 
  theme(legend.position = "none") +
  labs(title="Halloween Candy PCA Space",
       subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
       caption="Data from 538")
```
Let's try using this ggplot (p) with plotly to generate an interactive plot.
```{r}
# install.packages("plotly")
library(plotly)
ggplotly(p)
```
```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```
**Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?**

> A24. Fruity, hard, and pluribus are picked up strongly by PC1 in the positive, as shown in the barplot. These make sense to me, as the candy market for multiple little fruity hard candy in one package is huge (Skittles are so delicious). This might suggest that PC1 may represent a contrast between fruity, hard, multi-piece candies and others types!

