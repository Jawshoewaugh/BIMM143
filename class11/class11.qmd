---
title: "Class 11 - Protein Structure Prediction with AlphaFold"
author: "Joshua Mac"
format: pdf
date: Feb 17, 2025
---
**The following is analysis of my proposed protein of interest for the Find-a-Gene project**

*The analysis of the HIV-Pr dimer is at the end*

*Here is the AlphaFold model of the initial set*
```{r}
knitr::include_graphics("PROTEINOFINTERESTFROMFASTA_504D5_UNRELAXED_RANK_001_ALPHAFOLD2_PTM_MODEL_2_SEED_000.PDB-PROTEINOFINTERESTFROMFASTA_504D5_UNRELAXED_RANK_002_ALPHAFOLD2_PTM_MODEL_5_SEED_000.PDB-PROTEINOFINTERESTFROMFASTA_504D5_UNRELAXED_RANK_003_ALPHAFOLD2_P.png")
```

This should really preface what will happen later on in the analysis, because what the heck is this?

```{r}
results_dir <- "ProteinofinterestfromFASTA_504d5" 
```

```{r}
# File names for all PDB models
pdb_files <- list.files(path=results_dir,
                        pattern="*.pdb",
                        full.names = TRUE)

# Print our PDB file names
basename(pdb_files)
```

```{r}
library(bio3d)

# Read all data from Models 
#  and superpose/fit coords
pdbs <- pdbaln(pdb_files, fit=TRUE, exefile="msa")
```

```{r}
pdbs
```
```{r}
rd <- rmsd(pdbs, fit=T)
```
```{r}
range(rd)
```
```{r}
# Drawing a heatmap of RMSD matrix values
## install.packages("pheatmap")
library(pheatmap)

colnames(rd) <- paste0("m",1:5)
rownames(rd) <- paste0("m",1:5)
pheatmap(rd)


```
```{r}
# Read a reference PDB structure,
# Reference for protien of interest is "AF-P04637-F1-model_v4.pdb"
pdb <- read.pdb("AF-P04637-F1-model_v4.pdb")
```

```{r}
plotb3(pdbs$b[1,], typ="l", lwd=2, sse=pdb)
points(pdbs$b[2,], typ="l", col="red")
points(pdbs$b[3,], typ="l", col="blue")
points(pdbs$b[4,], typ="l", col="darkgreen")
points(pdbs$b[5,], typ="l", col="orange")
abline(v=100, col="gray")
```
```{r}
core <- core.find(pdbs)
```
```{r}
core.inds <- print(core, vol=1000)
#Note, had to adjust threshold to find core positions.
```
```{r}
xyz <- pdbfit(pdbs, core.inds, outpath="corefit_structures")
# Notice that for core.inds, and from the msa from above, we had no atom, xyz, or resno data...
```

```{r}
# Now we examin the RMSF b/w positions of the structure to measure conformational variance along the structure.
rf <- rmsf(xyz)

plotb3(rf, sse=pdb)
abline(v=100, col="gray", ylab="RMSF")
```
```{r}
library(jsonlite)

# Listing of all PAE JSON files
pae_files <- list.files(path=results_dir,
                        pattern=".*model.*\\.json",
                        full.names = TRUE)
```

```{r}
pae1 <- read_json(pae_files[1],simplifyVector = TRUE)
pae5 <- read_json(pae_files[5],simplifyVector = TRUE)

attributes(pae1)
```

```{r}
# Per-residue pLDDT scores 
#  same as B-factor of PDB..
head(pae1$plddt) 
```

```{r}
pae1$max_pae
```

```{r}
pae5$max_pae
```

```{r}
plot.dmat(pae1$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)")
```
```{r}
plot.dmat(pae5$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)",
          grid.col = "black",
          zlim=c(0,30))
```

```{r}
plot.dmat(pae1$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)",
          grid.col = "black",
          zlim=c(0,30))
```
```{r}
aln_file <- list.files(path=results_dir,
                       pattern=".a3m$",
                        full.names = TRUE)
aln_file
```

```{r}
aln <- read.fasta(aln_file[1], to.upper = TRUE)
```

```{r}
dim(aln$ali)
# Opening the .a3m file, it is just the one sequence duplicated twice, there is no alignment... doesn't this mean that the protein is novel? no homologous were found? maybe ColabFold failed...
```

```{r}
#sim <- conserv(aln)
```

```{r}
#plotb3(sim[1:99], sse=trim.pdb(pdb, chain="A"),
      # ylab="Conservation Score")
```
```{r}
#con <- consensus(aln, cutoff = 0.9)
#con$seq
```
```{r}
#m1.pdb <- read.pdb(pdb_files[1])
#occ <- vec2resno(c(sim[1:99], sim[1:99]), m1.pdb$atom$resno)
#write.pdb(m1.pdb, o=occ, file="m1_conserv.pdb")
```

In summary, because the novel protein of interest is novel, finding core positions for superposing and predicting conservation from the alignment file proved to be difficult. I will be turning it in late after many hours of trying to understand this and I will have to talk to Professor Barry tomorrow...

Here is the analysis for the HIV-Pr dimer AlphaFold2 models.
```{r}
results_dir <- "HIVPRdimer_23119" 
```

```{r}
# File names for all PDB models
pdb_files <- list.files(path=results_dir,
                        pattern="*.pdb",
                        full.names = TRUE)

# Print our PDB file names
basename(pdb_files)
```

```{r}
library(bio3d)

# Read all data from Models 
#  and superpose/fit coords
pdbs <- pdbaln(pdb_files, fit=TRUE, exefile="msa")
```

```{r}
pdbs
```

```{r}
rd <- rmsd(pdbs, fit=T)
```
```{r}
range(rd)
```

Heatmap
```{r}
library(pheatmap)

colnames(rd) <- paste0("m",1:5)
rownames(rd) <- paste0("m",1:5)
pheatmap(rd)
```
```{r}
# Read a reference PDB structure
pdb <- read.pdb("1hsg")
```

```{r}
plotb3(pdbs$b[1,], typ="l", lwd=2, sse=pdb)
points(pdbs$b[2,], typ="l", col="red")
points(pdbs$b[3,], typ="l", col="blue")
points(pdbs$b[4,], typ="l", col="darkgreen")
points(pdbs$b[5,], typ="l", col="orange")
abline(v=100, col="gray")

```

```{r}
core <- core.find(pdbs)
```

```{r}
core.inds <- print(core, vol=0.5)
```

```{r}
xyz <- pdbfit(pdbs, core.inds, outpath="corefit_structures")
```

```{r}
rf <- rmsf(xyz)

plotb3(rf, sse=pdb)
abline(v=100, col="gray", ylab="RMSF")
```
**Predicted Alignment Error (PAE) for domains**
```{r}
library(jsonlite)

# Listing of all PAE JSON files
pae_files <- list.files(path=results_dir,
                        pattern=".*model.*\\.json",
                        full.names = TRUE)
```

```{r}
pae1 <- read_json(pae_files[1],simplifyVector = TRUE)
pae5 <- read_json(pae_files[5],simplifyVector = TRUE)

attributes(pae1)
```

```{r}
# Per-residue pLDDT scores 
#  same as B-factor of PDB..
head(pae1$plddt) 
```

```{r}
pae1$max_pae
```

```{r}
pae5$max_pae
```

Plotting N by N PAE scores with Bio3D
```{r}
plot.dmat(pae1$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)")
```

```{r}
plot.dmat(pae5$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)",
          grid.col = "black",
          zlim=c(0,30))
```

```{r}
plot.dmat(pae1$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)",
          grid.col = "black",
          zlim=c(0,30))
```

```{r}
aln_file <- list.files(path=results_dir,
                       pattern=".a3m$",
                        full.names = TRUE)
aln_file
```

```{r}
aln <- read.fasta(aln_file[1], to.upper = TRUE)
```

```{r}
dim(aln$ali)
```

```{r}
sim <- conserv(aln)
```

```{r}
plotb3(sim[1:99], sse=trim.pdb(pdb, chain="A"),
       ylab="Conservation Score")
```

```{r}
con <- consensus(aln, cutoff = 0.9)
con$seq
```

```{r}
m1.pdb <- read.pdb(pdb_files[1])
occ <- vec2resno(c(sim[1:99], sim[1:99]), m1.pdb$atom$resno)
write.pdb(m1.pdb, o=occ, file="m1_conserv.pdb")
knitr::include_graphics("HIVPRDIMER_23119_UNRELAXED_RANK_001_ALPHAFOLD2_MULTIMER_V3_MODEL_1_SEED_000.PDB-HIVPRDIMER_23119_UNRELAXED_RANK_002_ALPHAFOLD2_MULTIMER_V3_MODEL_5_SEED_000.PDB-HIVPRDIMER_23119_UNRELAXED_RANK_003_ALPHAFOLD2_MULTIMER_V3_MODEL_4_SEED_000.PDB-.png")

```

